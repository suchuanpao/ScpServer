

关于开发前的任务职责分配模式1

一个项目：水平分模块
            上下分层次


#版权所属人：苏传跑
#email：suchuanpao@outlook.com
#转发者应注明出处

# 不同任务的职责：

    写代码过程中，开发者应当明确各自的职责，而写出不越界管理的代码，比如库开发者过度的保护使用者，
使得库代码冗杂和降低效率，所以开发前，要明确各自的职责。

    第一种类型的任务：   （底层库开发者）开发的库是提供更高层一级的（高层库开发者）库调用
            
        职责： 1、发生错误处理    （出错相信是自己的错误，确保自己代码逻辑无错误）
                            1、如果代码调用的是标准库代码，可由strerrno(errno)或者perror()得出错误结果的
                            则返回SCP_SYSERR的底层错误消息
                            则，而对库返回的错误消息的处理，同时库开发者不需要对该值进行处理，直接返回。
                            因为最终接收到错误返回值决定程序是否向下走还是回过头来自己分析原因的是应用开发程序员。
                            应用程序是否应当继续向下执行，
                            2、如果是使用库的开发者不遵循库使用规则，则直接assert()，抛出错误，
                            中断程序，因为这是严重错误，必然只会在开发阶段才会出现。虽然assert()影响效率，但是在版本发布时，
                            会定义  NDEBUG的宏，使得assert无效，assert是用于开发阶段的好帮手。
                            注：版本发布者应当先重新编译整个库，定义NDEBUG宏，再去编译应用程序。


    第二种类型的任务：      开发的库是直接提供给应用开发者
                1、         （出错相信是自己的错误，确保自己代码逻辑无错误）
                    



    第三种类型任务：         直接使用库开发应用
