#库命名规范：



1、变量名：
  #1
	-1、全部小写，用下划线隔开
	-2、特殊变量结构体，类对象，共用体要用统一修饰词，并放在开头
	-3、单词缩写不要过分
  #2
	-1、以面向对象方式写C时，对象将自己传入自己的接口时，应以this来命名该变量
	结构体前缀：
	st
	共用体前缀：
	un
	类对象：
	cls
	枚举型：
	en
    全局变量：
    scp    scp_cls scp_en  scp_un



2、类型声明：
	-1、必须以Scp开头
	-2、后面不可跟下划线
	-3、Scp后每个单词的第一个字母应当大写
	-4、单词缩写不要过分
	例：
	ScpSockClass；
	声明：
	struct _ScpSockClass{
		...
	}ScpSockClass;

3、函数声明：
	函数声明有两种区别：
	-1、如果是递归调用，使用驼峰命名法
	-2、如果是直接调用的函数，以Scp+下划线开头，后跟驼峰命名法
	st_sock->initSock(&st_sock);
	Scp_createSockClass();

4、宏定义
    -1、调试时使用的宏定义定义规则：
        情况1：如果代码是封装底层的调用，所以发生错误时库使用者可以使用，当错误是由于底层调用错误时
	-2、内部使用宏定义可随意使用
	-3、外部使用的宏定义必须：   SCP开头+模块名+功能
        例如：
            1、判断返回值是否成功:
                if( cls+server->bind() == SCP_SOCK_SUCCESS )
                if( cls+server->bind() == SCP_SOCK_FAILED )
	-4、描述形容单词缩写至少要看的懂


5、文件名命名：
    c++类文件则使用    使用类名做头文件
    c文件则使用        某个模块名下
